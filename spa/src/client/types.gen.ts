// This file is auto-generated by @hey-api/openapi-ts

export type ViewComment = {
    id: number;
    created: UtcTime;
    message: string;
    score: number;
    replies?: Paginated;
    authorName: string;
    conversationUrl: string;
};

export type UtcTime = string;

export type Paginated = {
    info: Array<ViewComment>;
    pagination: PaginationData;
};

export type PaginationData = {
    totalReplies: number;
    cursor: number;
};

export type NewComment = {
    message: string;
    parent?: number;
    author: string;
    convoUrl: string;
};

export type GetHealthData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type GetHealthResponses = {
    204: unknown;
};

export type GetHealthStatusData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health/status';
};

export type GetHealthStatusResponses = {
    204: unknown;
};

export type GetCommentsConversationByConvoUrlData = {
    body?: never;
    path: {
        convoUrl: string;
    };
    query?: {
        sortby?: 'Old' | 'New' | 'Popular' | 'Controversial';
    };
    url: '/comments/conversation/{convoUrl}';
};

export type GetCommentsConversationByConvoUrlErrors = {
    /**
     * Invalid `convoUrl` or `sortby`
     */
    400: unknown;
};

export type GetCommentsConversationByConvoUrlResponses = {
    200: Array<ViewComment>;
};

export type GetCommentsConversationByConvoUrlResponse = GetCommentsConversationByConvoUrlResponses[keyof GetCommentsConversationByConvoUrlResponses];

export type GetCommentsUserByUsernameData = {
    body?: never;
    path: {
        username: string;
    };
    query?: {
        sortby?: 'Old' | 'New' | 'Popular' | 'Controversial';
    };
    url: '/comments/user/{username}';
};

export type GetCommentsUserByUsernameErrors = {
    /**
     * Invalid `username` or `sortby`
     */
    400: unknown;
};

export type GetCommentsUserByUsernameResponses = {
    200: Array<ViewComment>;
};

export type GetCommentsUserByUsernameResponse = GetCommentsUserByUsernameResponses[keyof GetCommentsUserByUsernameResponses];

export type GetCommentsByIdRepliesData = {
    body?: never;
    path: {
        id: number;
    };
    query?: {
        sortby?: 'Old' | 'New' | 'Popular' | 'Controversial';
    };
    url: '/comments/{id}/replies';
};

export type GetCommentsByIdRepliesErrors = {
    /**
     * Invalid `id` or `sortby`
     */
    400: unknown;
};

export type GetCommentsByIdRepliesResponses = {
    200: Array<ViewComment>;
};

export type GetCommentsByIdRepliesResponse = GetCommentsByIdRepliesResponses[keyof GetCommentsByIdRepliesResponses];

export type PostCommentsNewData = {
    body: NewComment;
    path?: never;
    query?: {
        sortby?: 'Old' | 'New' | 'Popular' | 'Controversial';
    };
    url: '/comments/new';
};

export type PostCommentsNewErrors = {
    /**
     * Invalid `body` or `sortby`
     */
    400: unknown;
};

export type PostCommentsNewResponses = {
    201: number;
};

export type PostCommentsNewResponse = PostCommentsNewResponses[keyof PostCommentsNewResponses];

export type PostCommentsEditByIdData = {
    body: string;
    path: {
        id: number;
    };
    query?: {
        sortby?: 'Old' | 'New' | 'Popular' | 'Controversial';
    };
    url: '/comments/edit/{id}';
};

export type PostCommentsEditByIdErrors = {
    /**
     * Invalid `body` or `id` or `sortby`
     */
    400: unknown;
};

export type PostCommentsEditByIdResponses = {
    200: ViewComment;
};

export type PostCommentsEditByIdResponse = PostCommentsEditByIdResponses[keyof PostCommentsEditByIdResponses];

export type PostCommentsDeleteByIdData = {
    body?: never;
    path: {
        id: number;
    };
    query?: {
        sortby?: 'Old' | 'New' | 'Popular' | 'Controversial';
    };
    url: '/comments/delete/{id}';
};

export type PostCommentsDeleteByIdErrors = {
    /**
     * Invalid `id` or `sortby`
     */
    400: unknown;
};

export type PostCommentsDeleteByIdResponses = {
    204: unknown;
};

export type PostCommentsByIdUpvoteData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/comments/{id}/upvote';
};

export type PostCommentsByIdUpvoteErrors = {
    /**
     * Invalid `id`
     */
    400: unknown;
};

export type PostCommentsByIdUpvoteResponses = {
    204: unknown;
};

export type PostCommentsByIdDownvoteData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/comments/{id}/downvote';
};

export type PostCommentsByIdDownvoteErrors = {
    /**
     * Invalid `id`
     */
    400: unknown;
};

export type PostCommentsByIdDownvoteResponses = {
    204: unknown;
};

export type ClientOptions = {
    baseUrl: string;
};